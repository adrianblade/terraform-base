name: 'Validate'

# on:
#   push:
#     branches-ignore:
#     - 'main'

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions: write-all

env:
  TG_VERSION: v0.38.6
  TF_VERSION: 1.2.5
  TFSEC_VERSION: v1.5.0
  CODE_DIR: dev/services/codely-s3
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  SKIPVALIDATIONFAILURE: "Y"
  ENABLE_TFVALIDATE: "Y"
  ENABLE_TFSEC: "Y"

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform:
    name: 'Terraform Validate'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: $TF_VERSION

    - name: Install Terragrunt
      run: |
       curl -s -qL -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TG_VERSION/terragrunt_linux_amd64
       chmod +x terragrunt
       sudo mv terragrunt /bin
      
    - name: Install tfsec
      run: |
       wget -q -O tfsec https://github.com/aquasecurity/tfsec/releases/download/$TFSEC_VERSION/tfsec-linux-amd64
       chmod +x ./tfsec
       mv ./tfsec /usr/local/bin/tfsec

    - name: Verify Terragrunt version
      run: terragrunt --version
      
    - name: Verify Terraform version
      run: terraform --version
      
    - name: Verify awscli version
      run: aws --version

    #Run
                    
    - name: Run script tf_ssp_validations
      run: |
         chmod +x ./.github/workflows/scripts/tf_ssp_validation.sh
         ./.github/workflows/scripts/tf_ssp_validation.sh $SKIPVALIDATIONFAILURE $ENABLE_TFVALIDATE $ENABLE_TFSEC $CODE_DIR
      shell: bash

    - uses: actions/upload-artifact@v1
      with:
        name: fmt
        path: tmp
    - uses: actions/download-artifact@v1
      with:
        name: fmt
    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: fmt/fmt.txt

    - name: TfSec Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    
      with:
        fail-on-error: false
        name: TfSec Tests            # Name of the check run which will be created
        path: tfsec-junit.xml        # Path to test results
        reporter: java-junit         # Format of test results


      - uses: actions/upload-artifact@v1
        with:
          name: results
          path: output
      - uses: actions/download-artifact@v1
        with:
          name: results
      - name: comment PR
        uses: machine-learning-apps/pr-comment@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: results/results.txt